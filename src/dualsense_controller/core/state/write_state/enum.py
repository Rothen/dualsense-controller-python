from __future__ import annotations

from enum import Enum


class WriteStateName(str, Enum):
    FLAGS_CONTROLS = 'FLAGS_CONTROLS'
    FLAGS_PHYSICS = 'FLAGS_PHYSICS'

    MOTOR_LEFT = 'MOTOR_LEFT'
    MOTOR_RIGHT = 'MOTOR_RIGHT'

    LEFT_TRIGGER_EFFECT = 'LEFT_TRIGGER'
    LEFT_TRIGGER_EFFECT_MODE = 'LEFT_TRIGGER_EFFECT_MODE'
    LEFT_TRIGGER_EFFECT_PARAM1 = 'LEFT_TRIGGER_EFFECT_PARAM1'
    LEFT_TRIGGER_EFFECT_PARAM2 = 'LEFT_TRIGGER_EFFECT_PARAM2'
    LEFT_TRIGGER_EFFECT_PARAM3 = 'LEFT_TRIGGER_EFFECT_PARAM3'
    LEFT_TRIGGER_EFFECT_PARAM4 = 'LEFT_TRIGGER_EFFECT_PARAM4'
    LEFT_TRIGGER_EFFECT_PARAM5 = 'LEFT_TRIGGER_EFFECT_PARAM5'
    LEFT_TRIGGER_EFFECT_PARAM6 = 'LEFT_TRIGGER_EFFECT_PARAM6'
    LEFT_TRIGGER_EFFECT_PARAM7 = 'LEFT_TRIGGER_EFFECT_PARAM7'

    RIGHT_TRIGGER_EFFECT = 'RIGHT_TRIGGER'
    RIGHT_TRIGGER_EFFECT_MODE = 'RIGHT_TRIGGER_EFFECT_MODE'
    RIGHT_TRIGGER_EFFECT_PARAM1 = 'RIGHT_TRIGGER_EFFECT_PARAM1'
    RIGHT_TRIGGER_EFFECT_PARAM2 = 'RIGHT_TRIGGER_EFFECT_PARAM2'
    RIGHT_TRIGGER_EFFECT_PARAM3 = 'RIGHT_TRIGGER_EFFECT_PARAM3'
    RIGHT_TRIGGER_EFFECT_PARAM4 = 'RIGHT_TRIGGER_EFFECT_PARAM4'
    RIGHT_TRIGGER_EFFECT_PARAM5 = 'RIGHT_TRIGGER_EFFECT_PARAM5'
    RIGHT_TRIGGER_EFFECT_PARAM6 = 'RIGHT_TRIGGER_EFFECT_PARAM6'
    RIGHT_TRIGGER_EFFECT_PARAM7 = 'RIGHT_TRIGGER_EFFECT_PARAM7'

    LIGHTBAR = 'LIGHTBAR'
    LIGHTBAR_RED = 'LIGHTBAR_RED'
    LIGHTBAR_GREEN = 'LIGHTBAR_GREEN'
    LIGHTBAR_BLUE = 'LIGHTBAR_BLUE'
    LIGHTBAR_ON_OFF = 'LIGHTBAR_ON_OFF'
    LIGHTBAR_PULSE_OPTIONS = 'LIGHTBAR_PULSE_OPTIONS'

    LED_OPTIONS = 'LED_OPTIONS'

    PLAYER_LEDS = "PLAYER_LEDS"
    PLAYER_LEDS_BRIGHTNESS = 'PLAYER_LEDS_BRIGHTNESS'
    PLAYER_LEDS_ENABLE = 'PLAYER_LEDS_ENABLE'

    MICROPHONE = "MICROPHONE"
    MICROPHONE_LED = 'MICROPHONE_LED'
    MICROPHONE_MUTE = 'MICROPHONE_MUTE'


#
# Not clear
#
class OutFlagsPhysics(int, Enum):
    # Alternativ:
    # DS4_COMPATIBILITY_MODE = 1 << 0
    # DS5_MODE = 1 << 1
    COMPATIBLE_VIBRATION = 1 << 0
    HAPTICS_SELECT = 1 << 1
    ALL = (
            COMPATIBLE_VIBRATION |
            HAPTICS_SELECT
    )


class ControlFlags(int, Enum):
    MIC_MUTE_LED_CONTROL_ENABLE = 1 << 0
    POWER_SAVE_CONTROL_ENABLE = 1 << 1
    LIGHTBAR_CONTROL_ENABLE = 1 << 2
    RELEASE_LEDS = 1 << 3
    PLAYER_INDICATOR_CONTROL_ENABLE = 1 << 4
    UNKNOWN_FLAG_5 = 1 << 5
    OVERALL_EFFECT_POWER = 1 << 6
    UNKNOWN_FLAG_7 = 1 << 7
    ALL = (
        # RELEASE_LEDS |
            MIC_MUTE_LED_CONTROL_ENABLE |
            POWER_SAVE_CONTROL_ENABLE |
            LIGHTBAR_CONTROL_ENABLE |
            PLAYER_INDICATOR_CONTROL_ENABLE |
            OVERALL_EFFECT_POWER
    )
    ALL_BUT_MUTE_LED = (
        # RELEASE_LEDS |
        # MIC_MUTE_LED_CONTROL_ENABLE |
            POWER_SAVE_CONTROL_ENABLE |
            LIGHTBAR_CONTROL_ENABLE |
            PLAYER_INDICATOR_CONTROL_ENABLE |
            OVERALL_EFFECT_POWER
    )
    ALL_FORCE = 0xff


class PlayerLedsEnable(int, Enum):
    OFF = 0

    # Enables the single, center LED
    CENTER = 0b00100

    # Enables the two LEDs adjacent to and directly surrounding the CENTER LED
    INNER = 0b01010

    # Enables the two outermost LEDs surrounding the INNER LEDs
    OUTER = 0b10001

    ALL = CENTER | INNER | OUTER


class PlayerLedsBrightness(int, Enum):
    HIGH = 0
    MEDIUM = 0x01
    LOW = 0x02


class LightbarMode(int, Enum):
    LIGHT_ON = 1 << 0
    LIGHT_OFF = 1 << 1


class LightbarPulseOptions(int, Enum):
    OFF = 0
    FADE_IN_BLUE = 1 << 0
    FADE_OUT_BLUE = 1 << 1


class LedOptions(int, Enum):
    OFF = 0
    PLAYER_LED_BRIGHTNESS = 1 << 0
    UNINTERRUMPABLE_LED = 1 << 1
    ALL = PLAYER_LED_BRIGHTNESS | UNINTERRUMPABLE_LED


class TriggerEffectMode(int, Enum):
    CONTINUOUS_RESISTANCE = 0x01
    SECTION_RESISTANCE = 0x02
    VIBRATING = 0x06
    EFFECT_EXTENDED = 0x23
    CALIBRATE = 0xfc
